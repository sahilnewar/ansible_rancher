---
- name: Create namespace for Rancher Control Plane
  k8s:
    kubeconfig: "{{ rke_cluster_kube_config }}"
    state: present
    api_version: v1
    kind: Namespace
    name: cattle-system
  vars:
    cluster: "{{ groups['rke_' + inventory_hostname] }}"

- name: Create namespace for cert-manager
  k8s:
    kubeconfig: "{{ rke_cluster_kube_config }}"
    state: present
    api_version: v1
    kind: Namespace
    name: cert-manager
  vars:
    cluster: "{{ groups['rke_' + inventory_hostname] }}"
  when:
  - rancher_certmanager_enabled

- name: Add Rancher Repo to Helm
  command: "{{ helm_binary }} repo add --kubeconfig {{ rke_cluster_kube_config }} {{ helm_rancher_repo }} {{ helm_rancher_repo_url }}"
  changed_when: false

- name: Add Jetstack Cert-Manager Repo to Helm
  command: "{{ helm_binary }} repo add --kubeconfig {{ rke_cluster_kube_config }} {{ helm_certmanager_jetstack_repo }} {{ helm_certmanager_jetstack_repo_url }}"
  changed_when: false
  when:
  - rancher_certmanager_enabled

- name: Update Helm Repo
  command: "{{ helm_binary }} repo update --kubeconfig {{ rke_cluster_kube_config }}"
  changed_when: false

- name: Install CRD's for CertManager
  command: "{{ kubectl_binary }} --kubeconfig {{ rke_cluster_kube_config }} apply --validate=false -f {{ rancher_certmanager_crd_url }}"
  changed_when: false
  ignore_errors: yes
  when:
  - rancher_certmanager_enabled

- name: Install Cert-Manager
  command: "{{ helm_binary }} upgrade --install --kubeconfig {{ rke_cluster_kube_config }} --namespace cert-manager --version {{ helm_certmanager_version }} cert-manager {{ helm_certmanager_jetstack_repo }}/cert-manager"
  changed_when: false
  when:
  - rancher_certmanager_enabled

- name: Wait for certmanager to be ready
  command: "{{ kubectl_binary }} -n cert-manager --kubeconfig {{ rke_cluster_kube_config }} rollout status deploy/cert-manager"
  changed_when: false
  when:
  - rancher_certmanager_enabled

- name: Wait for certmanager cainjector to be ready
  command: "{{ kubectl_binary }} -n cert-manager --kubeconfig {{ rke_cluster_kube_config }} rollout status deploy/cert-manager-cainjector"
  changed_when: false
  when:
  - rancher_certmanager_enabled

- name: Wait for certmanager webhook to be ready
  command: "{{ kubectl_binary }} -n cert-manager --kubeconfig {{ rke_cluster_kube_config }} rollout status deploy/cert-manager-webhook"
  changed_when: false
  when:
  - rancher_certmanager_enabled

- name: Wait 20 seconds for cert-manager to properly run
  pause:
    seconds: "20"

- name: Create tls secret when using "Bring your own certificate" Rancher certificate method (method 3)
  k8s:
    kubeconfig: "{{ rke_cluster_kube_config }}"
    state: present
    definition:
      apiVersion: v1
      kind: Secret
      metadata:
        name: tls-rancher-ingress
        namespace: cattle-system
      data:
        tls.crt: "{{ rancher_tls_crt }}"
        tls.key: "{{ rancher_tls_key }}"
      type: kubernetes.io/tls
  when:
  - rancher_bring_your_own_certificates

- name: Create tls cacerts secret when using "Bring your own certificate" Rancher certificate method (method 3) and using self-signed Rancher TLS cert
  k8s:
    kubeconfig: "{{ rke_cluster_kube_config }}"
    state: present
    definition:
      apiVersion: v1
      kind: Secret
      metadata:
        name: tls-ca
        namespace: cattle-system
      data:
        cacerts.pem: "{{ rancher_tls_cacerts }}"
  when:
  - rancher_bring_your_own_certificates
  - rancher_tls_self_signed

# Rancher Certificate Method 1:
- name: Install Rancher with generated self-signed certificates (via Cert-Manager)
  command: "{{ helm_binary }} upgrade --install --kubeconfig {{ rke_cluster_kube_config }} --namespace cattle-system --set hostname={{ rancher_hostname }} --set ingress.tls.source=rancher --version {{ helm_rancher_version }} rancher {{ helm_rancher_repo }}/rancher"
  changed_when: false
  when:
  - rancher_certmanager_enabled
  - rancher_generated_self_signed_certificates
  - not rancher_lets_encrypt_generated_certificated
  - not rancher_bring_your_own_certificates

# Rancher Certificate Method 2:
- name: Install Rancher with Let's Encrypt (via Cert-Manager)
  command: "{{ helm_binary }} upgrade --install --kubeconfig {{ rke_cluster_kube_config }} --namespace cattle-system --set hostname={{ rancher_hostname }} --set ingress.tls.source=letsEncrypt --set letsEncrypt.email={{ rancher_letsencrypt_email }} --version {{ helm_rancher_version }} rancher {{ helm_rancher_repo }}/rancher"
  changed_when: false
  when:
  - rancher_certmanager_enabled
  - not rancher_generated_self_signed_certificates
  - rancher_lets_encrypt_generated_certificated
  - not rancher_bring_your_own_certificates

# Rancher Certificate Method 3a:
- name: Install Rancher with officially signed certificates
  command: "{{ helm_binary }} upgrade --install --kubeconfig {{ rke_cluster_kube_config }} --namespace cattle-system --set hostname={{ rancher_hostname }} --set ingress.tls.source=secret --version {{ helm_rancher_version }} rancher {{ helm_rancher_repo }}/rancher"
  changed_when: false
  when:
  - not rancher_certmanager_enabled
  - not rancher_generated_self_signed_certificates
  - not rancher_lets_encrypt_generated_certificated
  - rancher_bring_your_own_certificates
  - not rancher_tls_self_signed

# Rancher Certificate Method 3b:
- name: Install Rancher with self-signed certificates
  command: "{{ helm_binary }} upgrade --install --kubeconfig {{ rke_cluster_kube_config }} --namespace cattle-system --set hostname={{ rancher_hostname }} --set ingress.tls.source=secret --set privateCA=true --version {{ helm_rancher_version }} rancher {{ helm_rancher_repo }}/rancher"
  changed_when: false
  when:
  - not rancher_certmanager_enabled
  - not rancher_generated_self_signed_certificates
  - not rancher_lets_encrypt_generated_certificated
  - rancher_bring_your_own_certificates
  - rancher_tls_self_signed

- name: Wait for Rancher Deployment to be ready
  command: "{{ kubectl_binary }} -n cattle-system --kubeconfig {{ rke_cluster_kube_config }} rollout status deploy/rancher"
  changed_when: false

- name: Wait for Rancher to be ready
  command: "curl -k --silent https://{{ rancher_hostname }}/ping"
  args:
    warn: no
  register: rancher_ready
  until: rancher_ready.stdout.find("pong") != -1
  retries: 24
  delay: 5
  changed_when: false
  check_mode: no
