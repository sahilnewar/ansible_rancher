apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: ipfailover-{{ item.vip | replace(":","-")}}
  namespace: {{ keepalived_ns }}
  labels:
    failover: failover-{{ item.vip | replace(":","-") }}
spec:
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  selector:
    matchLabels:
      failover: failover-{{ item.vip | replace(":","-") }}
  template:
    metadata:
      labels:
        failover: failover-{{ item.vip | replace(":","-") }}
    spec:
      {% if node_selector != "" -%}
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: {{ node_selector }}
                operator: In
                values:
                - "true"
      {% endif -%}
      {% if node_toleration != "" -%}
      tolerations:
      - key: {{ node_toleration }}
        operator: "Equal"
        value: "true"
        effect: "NoSchedule"
      {% endif -%}
      hostNetwork: true
      containers:
      - env:
        {% if with_cloud_notify -%}
        - name: API_TOKEN
          value: {{ keepalived_cloudscale_api_token }}
        - name: SERVER_IDS
          value: '#PYTHON2BASH:[{{ server_ids }}]'
        - name: KEEPALIVED_NOTIFY
          value: /tmp/failoverscripts/notify.sh
        {% endif -%}
        - name: KEEPALIVED_ROUTER_ID
          value: "{{ item.router_id }}"
        - name: KEEPALIVED_INTERFACE
          value: "{{ interface }}"
        - name: KEEPALIVED_TRACK_INTERFACE
          value: "{{ track_interface }}"
        - name: KEEPALIVED_UNICAST_PEERS
          value: '#PYTHON2BASH:[{{ unicast_peers }}]'
        - name: KEEPALIVED_VIRTUAL_IPS
          value: '#PYTHON2BASH:[''{{ item.vip }}'']'
        - name: MASTER_HOST
          value: {{ item.master }}
        - name: KEEPALIVED_PASSWORD
          value: {{ item.password }}
        image: {{ keepalived_image }}
        imagePullPolicy: Always
        {% if with_cloud_notify -%}
        livenessProbe:
          exec:
            command:
            - /tmp/failoverscripts/check.py
          failureThreshold: 2
          initialDelaySeconds: 10
          periodSeconds: 60
          successThreshold: 1
          timeoutSeconds: 2
        {% endif -%}
        name: ipfailover
        {% if with_cloud_notify -%}
        volumeMounts:
        - mountPath: /tmp/failoverscripts/
          name: config
        {% endif -%}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_ADMIN
          privileged: false
          procMount: Default
          readOnlyRootFilesystem: false
          runAsNonRoot: false
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      {% if with_cloud_notify -%}
      volumes:
      - configMap:
          defaultMode: 511
          name: keepalived-failover
          optional: false
        name: config
      {% endif -%}